Content-Type: text/x-zim-wiki
Wiki-Format: zim 0.4
Creation-Date: 2015-11-03T23:04:16+08:00

====== Thread介绍1 ======
Created Tuesday 03 November 2015

Tread 主要用于home领域，并且声称由于home中网络节点数量可能很多，也可能很少，因此tread需要能支持这两种场景。从这个角度来看，他是能够支持professional领域，例如办公室，专卖店等领域。
他基于6LoWPAN，又与6LoWPAN略有不同。他期望通过网络自配置避免人为配置，减少工作量，增加效率。当然必要的时候他也能支持人工配置，包括人工配置路由。
分为三个角色：Router, REED, ED。其实router可以根据网络情况降级为REED, REED也可以升级为Router。其中router可以实现分配地址，转发消息的功能，而其他节点没有这些功能。这样可以避免在广播时系统转发广播太多，导致整个网络负荷过大，这也是ZigBee的一个问题。并且他有trickle算法，能够抑制和大大减少广播包数量。
安全上全网有一个network key。由于新加入节点没有进行认证，是不能信任节点。因此在初始分配时，新加入节点不是和router直接通信，而是通过一个信任节点转发。因此信任节点需要能够转发DTLS消息，以及初始化消息。需要注意的是DTLS是TLS的一个变种，DTLS用于UDP包，TLS用于TCP传输。
Tread没有单点故障，由于thread是mesh网络，因此某个节点路由坏了，网络会将网络路径改到其他路由节点上去，用户不用知道。但是没有单点故障不是说某些关键单点坏了，网络没有问题：如果这是一个狭长型的网络，正好中间唯一一个router坏了，这样网络还是会中断的。另外网络中有border router，也就是gateway，通过他能够连接到别的ip 网络中去。如果网络中只有一个border router，并且损坏的话，这个网络也将不再有能够与外界网络通信的能力。
总的来说thread三个特点：
1，无单点故障
2，分为三个角色
3，安全

Thread分为物理层，MAC层，网络层，UDP/TCP，以及mesh 链路。在功能上有网络初始化，网络形成，路由等功能。物理层和MAC层沿用IEEE802.15.4协议，没有太大变化。网络层包括了地址分配，地址冲突解决，路由发现，ICMP v6, DHCP v6。
总的来说tread是一个面向ip v6，适合于嵌入式系统的协议。
目前主要由google主推，其他很多公司积极参与，并且与ZigBee合作，将ZIgBee cluster直接用上来。也就是应用层直接沿用ZigBee联盟的协议，这样有利于后面两个协议的互联互通。
